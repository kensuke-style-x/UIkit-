import UIKit

class ImageListScreen: UIViewController {

    
    @IBOutlet weak var tableView: UITableView!
    
    var images: [Image] = []
    
    override func viewDidLoad() {
        super.viewDidLoad()

        images = createArray()
        
        tableView.delegate = self
        tableView.dataSource = self
        tableView.dropDelegate = self
    }
    
    func createArray()->[Image]{
        
        var tempImages: [Image] = []
        
        let image1 = Image(image:#imageLiteral(resourceName: "20C87EAA-92CC-4CCF-AA8D-A4E3CC221115.jpg") , title: "赤福" )
        
        let image2 = Image(image:#imageLiteral(resourceName: "20C87EAA-92CC-4CCF-AA8D-A4E3CC221115.jpg") , title: "20C87EAA-92CC-4CCF-AA8D-A4E3CC221115.jpg" )
        
        let image3 = Image(image:#imageLiteral(resourceName: "20C87EAA-92CC-4CCF-AA8D-A4E3CC221115.jpg") , title: "20C87EAA-92CC-4CCF-AA8D-A4E3CC221115.jpg" )
        
        let image4 = Image(image:#imageLiteral(resourceName: "20C87EAA-92CC-4CCF-AA8D-A4E3CC221115.jpg") , title: "20C87EAA-92CC-4CCF-AA8D-A4E3CC221115.jpg" )
        
        let image5 = Image(image:#imageLiteral(resourceName: "20C87EAA-92CC-4CCF-AA8D-A4E3CC221115.jpg") , title: "20C87EAA-92CC-4CCF-AA8D-A4E3CC221115.jpg" )
        
        tempImages.append(image1)
        tempImages.append(image2)
        tempImages.append(image3)
        tempImages.append(image4)
        tempImages.append(image5)
        
        return tempImages
        
    }
}
    
extension ImageListScreen: UITableViewDataSource,UITableViewDelegate, UITableViewDropDelegate{

     //tableView drop delegate 
    func tableView(_ tableView: UITableView, performDropWith coordinator: UITableViewDropCoordinator) {
        
        guard let insertionIndex = coordinator.destinationIndexPath else {
            return
        }
        for coordinatorItem in coordinator.items {
            let itemProvider = coordinatorItem.dragItem.itemProvider
            
            if itemProvider.canLoadObject(ofClass: NSString.self){
                itemProvider.loadObject(ofClass: NSString.self){(object,error) in
                  
                    DispatchQueue.main.async {
                        if let image = object as? UIImage{
                            let imageList = Image(image:image, title: "")
                            self.images.insert(imageList, at: insertionIndex.row)
                            tableView.insertRows(at: [insertionIndex], with:UITableView.RowAnimation.automatic)
                            }
                    }
                    }
            }
        }
        
    }
        
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return images.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let image = images[indexPath.row]
        let cell = tableView.dequeueReusableCell(withIdentifier: "ImageTableViewCell") as! ImageTableViewCell
        
        cell.setImage(image: image)
        
        return cell
    }
    
    //drag and drop method (with didTapSort Button)
    
    @IBAction func didTapSort(){
        if tableView.isEditing {
         tableView.isEditing = false
        } else {
            tableView.isEditing = true
        }
    }
    
    func tableView(_ tableView: UITableView, canMoveRowAt indexPath: IndexPath) -> Bool {
        return true
    }
    
    func tableView(_ tableView: UITableView, moveRowAt sourceIndexPath: IndexPath, to destinationIndexPath: IndexPath) {
        images.swapAt(sourceIndexPath.row, destinationIndexPath.row)
    }
    
    //delete Method
    func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCell.EditingStyle, forRowAt indexPath: IndexPath) {
            if editingStyle == UITableViewCell.EditingStyle.delete{
                images.remove(at: indexPath.row)
            }
            tableView.deleteRows(at: [indexPath as IndexPath], with: UITableView.RowAnimation.automatic)
        }
    
    
    
    }
    

