import UIKit

class TodoListViewController: UITableViewController {

    var itemArray = [Item]() 
    
    let dataFilePath = FileManager.default.urls(for: .documentDirectory, in: .userDomainMask).first?.appendingPathComponent("Idea.plist")
    
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
       loadIdeas()
        
    
        }
    

    //Tableview Datasource
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return itemArray.count
    }

    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "TodoItemCell", for: indexPath)
        
        
        cell.textLabel?.text = itemArray[indexPath.row]
        //numberOfLines
        cell.textLabel?.numberOfLines = 0
        
        return cell
    }
    
    // TableView Deligate Method
    
    //checkmark Method
    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        
        if tableView.cellForRow(at: indexPath)?.accessoryType == .checkmark {
            tableView.cellForRow(at: indexPath)?.accessoryType = .none
        } else {
            tableView.cellForRow(at: indexPath)?.accessoryType = .checkmark
        }
        
    }
    
    //delete Method
    override func tableView(_ tableView: UITableView, canEditRowAt indexPath: IndexPath) -> Bool {
        return true
    }
    
    override func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCell.EditingStyle, forRowAt indexPath: IndexPath) {
        if editingStyle == UITableViewCell.EditingStyle.delete{
            itemArray.remove(at: indexPath.row)
        }
        tableView.deleteRows(at: [indexPath as IndexPath], with: UITableView.RowAnimation.automatic)
    }
    
    
    //drag and drop delegate
    
    func tableView(_ tableView: UITableView, canMoveRowAt indexPath: IndexPath) -> Bool {
        return true
    }
    
    func tableView(_ tableView: UITableView, moveRowAt sourceIndexPath: IndexPath, to destinationIndexPath: IndexPath) {
        itemArray.swapAt(sourceIndexPath.row, destinationIndexPath.row)
    }
    
    
    
    //Pencil Button Method
    @IBAction func pencilButtonPressed(_ sender: UIBarButtonItem) {
        
        var textField = UITextField(
        )
        
        let alert = UIAlertController(title: "New Idea", message: "", preferredStyle: .alert)
        
        let action = UIAlertAction(title: "New Idea", style: .default){(action)in
            
            self.itemArray.append(textField.text!)
            
            self.tableView.reloadData()
            self.saveIdeas()
            
        }
        
        
        alert.addTextField{(alertTextField)in
            alertTextField.placeholder = " Create New Idea"
            textField = alertTextField
        }
        
        alert.addAction(action)
        
        present(alert,animated: true, completion: nil)
        
        self.saveIdeas()
        
         loadIdeas()
        
        }
    
    //Encoding Data
    func saveIdeas () {
        let encoder = PropertyListEncoder(
        )
        
        do {
            let data = try encoder.encode(itemArray)
            try data.write(to: dataFilePath!)
        }catch{
            print("Error Encoding Data")
        }
        self.tableView.reloadData()
    }
    
    //Decoding Data
    
    func loadIdeas() {
        if let data = try? Data(contentsOf: dataFilePath!){
        
        let decoder = PropertyListDecoder()
        do {
           itemArray = try decoder.decode([Item].self,from:data)
        }   catch {
            print("Error decoding")
            }
        }
    }
    

}
